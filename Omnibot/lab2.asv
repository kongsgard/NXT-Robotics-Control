%% Simulink parameters
Kp = 10;
Kd = 1;
Ts = 0.005;
theta = 0; % Don't rotate the robot
Ts_traj = 0.3;

% DT lowpass filter
tau = 0.05;                                        % test BOTH 0. 0 5 AND 0. 1 0 seconds
cttf = tf([1 0], [tau 1]);                         % numer : "s"; denom: "tau * s + 1".
dttf = c2d(cttf, Ts, 'tustin');                    % create the DT lowpass filter

%% Square trajectory
sideLength = 1;    % Square side length (meters)
resolution = 25; % Number of points along each side of the square
[x, y] = createSquarePattern(sideLength, resolution);

dt = 0.01; % Time step (seconds)
[t, q, q_dot] = calculateJointTrajectories(x, y, Ts);

traj_A = q(1, :);
traj_dA = q_dot(1, :);
traj_B = q(2, :);
traj_dB = q_dot(2, :);
traj_C = q(3, :);
traj_dC = q_dot(3, :);

figure(1); clf; hold on;
subplot(2, 1, 1);
plot(t, q);
title('Trajectories, $q$', 'FontSize', 30, 'Interpreter', 'Latex');
xlabel('Time (seconds)', 'FontSize', 20, 'Interpreter', 'Latex');
ylabel('Angles (rad)', 'FontSize', 20, 'Interpreter', 'Latex');
legend({'$q_1$', '$q_2$', '$q_3$'}, 'FontSize', 20, 'Interpreter', 'Latex');

subplot(2, 1, 2);
plot(smooth(q_dot, 20);
title('Velocities, $\dot{q}$', 'FontSize', 30, 'Interpreter', 'Latex');
xlabel('Time (seconds)', 'FontSize', 20, 'Interpreter', 'Latex');
ylabel('Angular speed (rad/s)', 'FontSize', 20, 'Interpreter', 'Latex');
legend({'$\dot{q}_1$', '$\dot{q}_2$', '$\dot{q}_3$'}, 'FontSize', 20, 'Interpreter', 'Latex');